c
user
@user
c
@user.update(suspended:false)
@user
c
a.ids.count
@like.ids
a.ids
a.like_id
a.id
a=@like.where("user_id = ?", current_user.id)
@like.where("user_id = ?", current_user.id)
@like_destroy.id
c
@like_destroy.like_id
@like_destroy.user_id
c
@like_destroy
c
a.destroy(id)
a.destroy
a=@like.where(user_id: current_user.id)
@like.where(user_id: current_user.id)
@like.current_user.id
@like.current_user
@like
exit
c
@user.update(suspended:true)
c
<% if can? :suspend,user %>
c
<% if can? :'suspend',user %>
c
user.email
user.suspended
c
user.user_name
user.id
@users
c
@like.id
@like
c
@like.ids
@like.user_id
@like
c
@like
@like.id
@like
@like.post_id
@like
@like.user_id
@like.id
@like.Like_id
@like.find_by("like_id")
@like.find(:id)
@like
Like.id
c
l
l.Like_id
l.(byebug) Like.where("post_id = ?", params[:id])
l.Like_id
l.like_id
l.id
l = @like
@like.id
@like
@like.id
2like.id
c
Like.where("post_id = ?", params[:id])
like.where("post_id = ?", params[:id])
params
c
a.post.like
a.like.id
a.like
a.like_id
a =params[:id]
a.like
a.where("user_id = ?", current_user.id)
a.post
a =params[:id]
params[:id]
post
params[post]
params[:post]
post
params
c
post.id.likes
params[:id]
c
params[:id]
post
post.id
params
c
a.post
a=Like.last
Like.last
likes.post
post
post.id
post.likes.id
post.id.post.likes
post.id.likes
post.id
c
post.id
params[:id]
post.likes.find_by(user_id: current_user.id, post: post.id)
c
post.like.id
post.likes.id
post.likes
post.id
posts
c
post.id.post.likes
post.id.likes
post.id
post.id.likes.find_by(user_id: current_user.id)
post.id.likes.find_by(user_id: current_user.id
params[:id]
post.find_by(:id)
        @post = Post.find(params[:id])
post.id.find_by
post.id
post.find_by(:post_id)
post.find(:post_id)
post.find(:id)
post.find_by(:post.id)
post.find_by(post.id)
post.id
post.find_by(:id)
c
params
params[:id]
c
params[:id]
c
params[:id]
params
post.likes.find_by(user_id: current_user.id)
post.likes
post
        @post = Post.find(params[:id])
c
@posts
@post
c
post
c
post.user.user_name 
post.user_name
post
c
@post.each do |post|
@posts
(Post.preload(:user).all.order(created_at: :desc))
c
        !!self.likes.find{|like| like.user_id == user.id }
c
        !!self.likes.find{|like| like.user_id == user.id }
c
Like.create(user_id: current_user.id, post_id: @post.id)
=> 46:         Like.create(user_id: current_user.id, post_id: @post.id)
c
 Like.destroy(params[:id])
params
c
else
post.liked?(current_user)
if post.liked?(current_user)
c
post.likes.find_by(user_id: current_user.id)
=> 53:             <%= button_to '👍 Like',destroy_like_path(post.likes.find_by(user_id: current_user.id)), method: :get, style:"color:red; border:0px; background-color:white;"%>
c
post
post, post.comments.build
ost, post.comments.build]
params
post
c
c\
c
post
poat
c
post=Post.find_by(:id => params[:id])
params[:id]
post
post=Post.find_by(:id =>"16")
params
c
params
post
c
params
post
form
c
post
exit
c
f
post.comments.build
post
exit
c
post
c
@post
@comment
parent_id
post
c
post
@post
c
@post
post
params
post
c
comment.first
comment
comment.parent_id
comment
    4: <% unless comment.parent_id || !comment.persisted? %>
c
cccccc
c
@posts
@post
params
post.comments
@post
params
post
c
params
c
@posts
@post
params
exit
current_user.role=="admin"
current_user.role
current_user.role == admin?
